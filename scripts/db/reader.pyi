class PyEntry:
    phonetic: str
    definition: str
    translation: str
    exchanges: list[str]

class PyDBReader:
    name: str
    name_zh: str
    def __init__(self, path: str, temp: str): ...
    def load(self) -> None: ...
    def set_enabled(self, enabled: bool) -> None: ...
    def filter(self, word: str, seps: list[str]) -> list[PyEntry]: ...
    def __getitem__(self, key: str) -> PyEntry | None: ...
    def __len__(self) -> int: ...
    def __contains__(self, key: str) -> bool: ...

class PyMatcher:
    def __init__(self): ...
    def combine(self, reader: PyDBReader) -> None: ...
    def find(self, word: str) -> str | None: ...
